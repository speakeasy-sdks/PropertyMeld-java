/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package PropertyMeld.MeldAPI.models.shared;

import PropertyMeld.MeldAPI.utils.DateTimeDeserializer;
import PropertyMeld.MeldAPI.utils.DateTimeSerializer;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;

public class Resident {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("address")
    public ResidentAddress address;

    public Resident withAddress(ResidentAddress address) {
        this.address = address;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("contact")
    public Contact contact;

    public Resident withContact(Contact contact) {
        this.contact = contact;
        return this;
    }
    
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("created")
    public OffsetDateTime created;

    public Resident withCreated(OffsetDateTime created) {
        this.created = created;
        return this;
    }
    
    @JsonProperty("first_name")
    public String firstName;

    public Resident withFirstName(String firstName) {
        this.firstName = firstName;
        return this;
    }
    
    @JsonProperty("id")
    public Long id;

    public Resident withId(Long id) {
        this.id = id;
        return this;
    }
    
    /**
     * Send an invite to the resident to access PropertyMeld
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("invite")
    public Boolean invite;

    public Resident withInvite(Boolean invite) {
        this.invite = invite;
        return this;
    }
    
    @JsonProperty("is_active")
    public Boolean isActive;

    public Resident withIsActive(Boolean isActive) {
        this.isActive = isActive;
        return this;
    }
    
    @JsonProperty("last_name")
    public String lastName;

    public Resident withLastName(String lastName) {
        this.lastName = lastName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("middle_name")
    public String middleName;

    public Resident withMiddleName(String middleName) {
        this.middleName = middleName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("notes")
    public String notes;

    public Resident withNotes(String notes) {
        this.notes = notes;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("notification_settings")
    public NotificationSettings notificationSettings;

    public Resident withNotificationSettings(NotificationSettings notificationSettings) {
        this.notificationSettings = notificationSettings;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("units")
    public Long[] units;

    public Resident withUnits(Long[] units) {
        this.units = units;
        return this;
    }
    
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("updated")
    public OffsetDateTime updated;

    public Resident withUpdated(OffsetDateTime updated) {
        this.updated = updated;
        return this;
    }
    
    public Resident(@JsonProperty("created") OffsetDateTime created, @JsonProperty("first_name") String firstName, @JsonProperty("id") Long id, @JsonProperty("is_active") Boolean isActive, @JsonProperty("last_name") String lastName, @JsonProperty("updated") OffsetDateTime updated) {
        this.created = created;
        this.firstName = firstName;
        this.id = id;
        this.isActive = isActive;
        this.lastName = lastName;
        this.updated = updated;
  }
}
