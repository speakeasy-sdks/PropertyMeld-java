/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package PropertyMeld.MeldAPI.models.shared;

import PropertyMeld.MeldAPI.utils.DateTimeDeserializer;
import PropertyMeld.MeldAPI.utils.DateTimeSerializer;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;

public class MeldSerializerDetailOutput {
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("assigned")
    public OffsetDateTime assigned;

    public MeldSerializerDetailOutput withAssigned(OffsetDateTime assigned) {
        this.assigned = assigned;
        return this;
    }
    
    @JsonProperty("assigner")
    public Long assigner;

    public MeldSerializerDetailOutput withAssigner(Long assigner) {
        this.assigner = assigner;
        return this;
    }
    
    @JsonProperty("brief_description")
    public String briefDescription;

    public MeldSerializerDetailOutput withBriefDescription(String briefDescription) {
        this.briefDescription = briefDescription;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("completion_date")
    public OffsetDateTime completionDate;

    public MeldSerializerDetailOutput withCompletionDate(OffsetDateTime completionDate) {
        this.completionDate = completionDate;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("completion_notes")
    public String completionNotes;

    public MeldSerializerDetailOutput withCompletionNotes(String completionNotes) {
        this.completionNotes = completionNotes;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("create_by")
    public java.util.Map<String, Object> createBy;

    public MeldSerializerDetailOutput withCreateBy(java.util.Map<String, Object> createBy) {
        this.createBy = createBy;
        return this;
    }
    
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("created")
    public OffsetDateTime created;

    public MeldSerializerDetailOutput withCreated(OffsetDateTime created) {
        this.created = created;
        return this;
    }
    
    @JsonProperty("creator")
    public Long creator;

    public MeldSerializerDetailOutput withCreator(Long creator) {
        this.creator = creator;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;

    public MeldSerializerDetailOutput withDescription(String description) {
        this.description = description;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("due_date")
    public OffsetDateTime dueDate;

    public MeldSerializerDetailOutput withDueDate(OffsetDateTime dueDate) {
        this.dueDate = dueDate;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("has_pets")
    public Boolean hasPets;

    public MeldSerializerDetailOutput withHasPets(Boolean hasPets) {
        this.hasPets = hasPets;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("has_registered_tenant")
    public Boolean hasRegisteredTenant;

    public MeldSerializerDetailOutput withHasRegisteredTenant(Boolean hasRegisteredTenant) {
        this.hasRegisteredTenant = hasRegisteredTenant;
        return this;
    }
    
    @JsonProperty("id")
    public Long id;

    public MeldSerializerDetailOutput withId(Long id) {
        this.id = id;
        return this;
    }
    
    @JsonProperty("in_house_servicers")
    public MeldListViewInHouseMeldServicer[] inHouseServicers;

    public MeldSerializerDetailOutput withInHouseServicers(MeldListViewInHouseMeldServicer[] inHouseServicers) {
        this.inHouseServicers = inHouseServicers;
        return this;
    }
    
    @JsonProperty("invite_assignments")
    public MeldListViewInviteAssignment[] inviteAssignments;

    public MeldSerializerDetailOutput withInviteAssignments(MeldListViewInviteAssignment[] inviteAssignments) {
        this.inviteAssignments = inviteAssignments;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("is_active")
    public Boolean isActive;

    public MeldSerializerDetailOutput withIsActive(Boolean isActive) {
        this.isActive = isActive;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("maintenance_notes")
    public String maintenanceNotes;

    public MeldSerializerDetailOutput withMaintenanceNotes(String maintenanceNotes) {
        this.maintenanceNotes = maintenanceNotes;
        return this;
    }
    
    @JsonProperty("management")
    public Long management;

    public MeldSerializerDetailOutput withManagement(Long management) {
        this.management = management;
        return this;
    }
    
    @JsonProperty("management_agent_closer")
    public MeldSerializerDetailManagementAgentCloser managementAgentCloser;

    public MeldSerializerDetailOutput withManagementAgentCloser(MeldSerializerDetailManagementAgentCloser managementAgentCloser) {
        this.managementAgentCloser = managementAgentCloser;
        return this;
    }
    
    @JsonProperty("managementappointment")
    public MeldSerializerDetailManagementappointment managementappointment;

    public MeldSerializerDetailOutput withManagementappointment(MeldSerializerDetailManagementappointment managementappointment) {
        this.managementappointment = managementappointment;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("manager_cancellation_reason")
    public String managerCancellationReason;

    public MeldSerializerDetailOutput withManagerCancellationReason(String managerCancellationReason) {
        this.managerCancellationReason = managerCancellationReason;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("manager_cancelled")
    public OffsetDateTime managerCancelled;

    public MeldSerializerDetailOutput withManagerCancelled(OffsetDateTime managerCancelled) {
        this.managerCancelled = managerCancelled;
        return this;
    }
    
    @JsonProperty("manager_canceller")
    public MeldSerializerDetailManagerCanceller managerCanceller;

    public MeldSerializerDetailOutput withManagerCanceller(MeldSerializerDetailManagerCanceller managerCanceller) {
        this.managerCanceller = managerCanceller;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("marked_complete")
    public OffsetDateTime markedComplete;

    public MeldSerializerDetailOutput withMarkedComplete(OffsetDateTime markedComplete) {
        this.markedComplete = markedComplete;
        return this;
    }
    
    @JsonProperty("meld_expenditures")
    public MeldSerializerDetailMeldExpenditures meldExpenditures;

    public MeldSerializerDetailOutput withMeldExpenditures(MeldSerializerDetailMeldExpenditures meldExpenditures) {
        this.meldExpenditures = meldExpenditures;
        return this;
    }
    
    @JsonProperty("meld_group")
    public String meldGroup;

    public MeldSerializerDetailOutput withMeldGroup(String meldGroup) {
        this.meldGroup = meldGroup;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("notify_owner")
    public Boolean notifyOwner;

    public MeldSerializerDetailOutput withNotifyOwner(Boolean notifyOwner) {
        this.notifyOwner = notifyOwner;
        return this;
    }
    
    @JsonProperty("open_work_entry")
    public String openWorkEntry;

    public MeldSerializerDetailOutput withOpenWorkEntry(String openWorkEntry) {
        this.openWorkEntry = openWorkEntry;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("owner_approval_acknowledged")
    public OffsetDateTime ownerApprovalAcknowledged;

    public MeldSerializerDetailOutput withOwnerApprovalAcknowledged(OffsetDateTime ownerApprovalAcknowledged) {
        this.ownerApprovalAcknowledged = ownerApprovalAcknowledged;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("owner_approval_comment")
    public String ownerApprovalComment;

    public MeldSerializerDetailOutput withOwnerApprovalComment(String ownerApprovalComment) {
        this.ownerApprovalComment = ownerApprovalComment;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("owner_approval_completed_date")
    public OffsetDateTime ownerApprovalCompletedDate;

    public MeldSerializerDetailOutput withOwnerApprovalCompletedDate(OffsetDateTime ownerApprovalCompletedDate) {
        this.ownerApprovalCompletedDate = ownerApprovalCompletedDate;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("owner_approval_dollar_amount")
    public String ownerApprovalDollarAmount;

    public MeldSerializerDetailOutput withOwnerApprovalDollarAmount(String ownerApprovalDollarAmount) {
        this.ownerApprovalDollarAmount = ownerApprovalDollarAmount;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("owner_approval_request_date")
    public OffsetDateTime ownerApprovalRequestDate;

    public MeldSerializerDetailOutput withOwnerApprovalRequestDate(OffsetDateTime ownerApprovalRequestDate) {
        this.ownerApprovalRequestDate = ownerApprovalRequestDate;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("owner_approval_request_message")
    public String ownerApprovalRequestMessage;

    public MeldSerializerDetailOutput withOwnerApprovalRequestMessage(String ownerApprovalRequestMessage) {
        this.ownerApprovalRequestMessage = ownerApprovalRequestMessage;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("owner_approval_status")
    public OwnerApprovalStatusEnum ownerApprovalStatus;

    public MeldSerializerDetailOutput withOwnerApprovalStatus(OwnerApprovalStatusEnum ownerApprovalStatus) {
        this.ownerApprovalStatus = ownerApprovalStatus;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("owner_approved_by")
    public Long ownerApprovedBy;

    public MeldSerializerDetailOutput withOwnerApprovedBy(Long ownerApprovedBy) {
        this.ownerApprovedBy = ownerApprovedBy;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("owner_notified_assignment")
    public OffsetDateTime ownerNotifiedAssignment;

    public MeldSerializerDetailOutput withOwnerNotifiedAssignment(OffsetDateTime ownerNotifiedAssignment) {
        this.ownerNotifiedAssignment = ownerNotifiedAssignment;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("parent")
    public Long parent;

    public MeldSerializerDetailOutput withParent(Long parent) {
        this.parent = parent;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("pets")
    public String pets;

    public MeldSerializerDetailOutput withPets(String pets) {
        this.pets = pets;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("priority")
    public PriorityEnum priority;

    public MeldSerializerDetailOutput withPriority(PriorityEnum priority) {
        this.priority = priority;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("project")
    public Long project;

    public MeldSerializerDetailOutput withProject(Long project) {
        this.project = project;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("prop")
    public MeldListViewProperty prop;

    public MeldSerializerDetailOutput withProp(MeldListViewProperty prop) {
        this.prop = prop;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("reason_cannot_complete")
    public String reasonCannotComplete;

    public MeldSerializerDetailOutput withReasonCannotComplete(String reasonCannotComplete) {
        this.reasonCannotComplete = reasonCannotComplete;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("recurring_meld")
    public Long recurringMeld;

    public MeldSerializerDetailOutput withRecurringMeld(Long recurringMeld) {
        this.recurringMeld = recurringMeld;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("reference_id")
    public String referenceId;

    public MeldSerializerDetailOutput withReferenceId(String referenceId) {
        this.referenceId = referenceId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("reviewing_tenant")
    public Long reviewingTenant;

    public MeldSerializerDetailOutput withReviewingTenant(Long reviewingTenant) {
        this.reviewingTenant = reviewingTenant;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("started")
    public OffsetDateTime started;

    public MeldSerializerDetailOutput withStarted(OffsetDateTime started) {
        this.started = started;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status")
    public Status5c6Enum status;

    public MeldSerializerDetailOutput withStatus(Status5c6Enum status) {
        this.status = status;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tags")
    public WriteableTag[] tags;

    public MeldSerializerDetailOutput withTags(WriteableTag[] tags) {
        this.tags = tags;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tenant_canceller")
    public Long tenantCanceller;

    public MeldSerializerDetailOutput withTenantCanceller(Long tenantCanceller) {
        this.tenantCanceller = tenantCanceller;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tenant_presence_required")
    public Boolean tenantPresenceRequired;

    public MeldSerializerDetailOutput withTenantPresenceRequired(Boolean tenantPresenceRequired) {
        this.tenantPresenceRequired = tenantPresenceRequired;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tenant_rating")
    public Object tenantRating;

    public MeldSerializerDetailOutput withTenantRating(Object tenantRating) {
        this.tenantRating = tenantRating;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tenant_review")
    public String tenantReview;

    public MeldSerializerDetailOutput withTenantReview(String tenantReview) {
        this.tenantReview = tenantReview;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("tenant_review_date")
    public OffsetDateTime tenantReviewDate;

    public MeldSerializerDetailOutput withTenantReviewDate(OffsetDateTime tenantReviewDate) {
        this.tenantReviewDate = tenantReviewDate;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tenants")
    public Tenant[] tenants;

    public MeldSerializerDetailOutput withTenants(Tenant[] tenants) {
        this.tenants = tenants;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("unit")
    public MeldListViewUnit unit;

    public MeldSerializerDetailOutput withUnit(MeldListViewUnit unit) {
        this.unit = unit;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("update_by")
    public java.util.Map<String, Object> updateBy;

    public MeldSerializerDetailOutput withUpdateBy(java.util.Map<String, Object> updateBy) {
        this.updateBy = updateBy;
        return this;
    }
    
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("updated")
    public OffsetDateTime updated;

    public MeldSerializerDetailOutput withUpdated(OffsetDateTime updated) {
        this.updated = updated;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("vendor_assignment_requests")
    public VendorAssignmentRequest[] vendorAssignmentRequests;

    public MeldSerializerDetailOutput withVendorAssignmentRequests(VendorAssignmentRequest[] vendorAssignmentRequests) {
        this.vendorAssignmentRequests = vendorAssignmentRequests;
        return this;
    }
    
    @JsonProperty("vendor_closer")
    public MeldSerializerDetailVendorCloser vendorCloser;

    public MeldSerializerDetailOutput withVendorCloser(MeldSerializerDetailVendorCloser vendorCloser) {
        this.vendorCloser = vendorCloser;
        return this;
    }
    
    @JsonProperty("vendorappointment")
    public MeldSerializerDetailVendorappointment vendorappointment;

    public MeldSerializerDetailOutput withVendorappointment(MeldSerializerDetailVendorappointment vendorappointment) {
        this.vendorappointment = vendorappointment;
        return this;
    }
    
    @JsonProperty("work_category")
    public WorkCategoryEnum workCategory;

    public MeldSerializerDetailOutput withWorkCategory(WorkCategoryEnum workCategory) {
        this.workCategory = workCategory;
        return this;
    }
    
    @JsonProperty("work_location")
    public String workLocation;

    public MeldSerializerDetailOutput withWorkLocation(String workLocation) {
        this.workLocation = workLocation;
        return this;
    }
    
    public MeldSerializerDetailOutput(@JsonProperty("assigner") Long assigner, @JsonProperty("brief_description") String briefDescription, @JsonProperty("created") OffsetDateTime created, @JsonProperty("creator") Long creator, @JsonProperty("id") Long id, @JsonProperty("in_house_servicers") MeldListViewInHouseMeldServicer[] inHouseServicers, @JsonProperty("invite_assignments") MeldListViewInviteAssignment[] inviteAssignments, @JsonProperty("management") Long management, @JsonProperty("management_agent_closer") MeldSerializerDetailManagementAgentCloser managementAgentCloser, @JsonProperty("managementappointment") MeldSerializerDetailManagementappointment managementappointment, @JsonProperty("manager_canceller") MeldSerializerDetailManagerCanceller managerCanceller, @JsonProperty("meld_expenditures") MeldSerializerDetailMeldExpenditures meldExpenditures, @JsonProperty("meld_group") String meldGroup, @JsonProperty("open_work_entry") String openWorkEntry, @JsonProperty("updated") OffsetDateTime updated, @JsonProperty("vendor_closer") MeldSerializerDetailVendorCloser vendorCloser, @JsonProperty("vendorappointment") MeldSerializerDetailVendorappointment vendorappointment, @JsonProperty("work_category") WorkCategoryEnum workCategory, @JsonProperty("work_location") String workLocation) {
        this.assigner = assigner;
        this.briefDescription = briefDescription;
        this.created = created;
        this.creator = creator;
        this.id = id;
        this.inHouseServicers = inHouseServicers;
        this.inviteAssignments = inviteAssignments;
        this.management = management;
        this.managementAgentCloser = managementAgentCloser;
        this.managementappointment = managementappointment;
        this.managerCanceller = managerCanceller;
        this.meldExpenditures = meldExpenditures;
        this.meldGroup = meldGroup;
        this.openWorkEntry = openWorkEntry;
        this.updated = updated;
        this.vendorCloser = vendorCloser;
        this.vendorappointment = vendorappointment;
        this.workCategory = workCategory;
        this.workLocation = workLocation;
  }
}
