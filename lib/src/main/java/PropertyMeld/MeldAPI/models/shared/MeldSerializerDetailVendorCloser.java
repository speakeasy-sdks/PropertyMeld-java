/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package PropertyMeld.MeldAPI.models.shared;

import PropertyMeld.MeldAPI.utils.DateTimeDeserializer;
import PropertyMeld.MeldAPI.utils.DateTimeSerializer;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;

public class MeldSerializerDetailVendorCloser {
    @JsonProperty("address")
    public Long address;

    public MeldSerializerDetailVendorCloser withAddress(Long address) {
        this.address = address;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("create_by")
    public java.util.Map<String, Object> createBy;

    public MeldSerializerDetailVendorCloser withCreateBy(java.util.Map<String, Object> createBy) {
        this.createBy = createBy;
        return this;
    }
    
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("created")
    public OffsetDateTime created;

    public MeldSerializerDetailVendorCloser withCreated(OffsetDateTime created) {
        this.created = created;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("email")
    public String email;

    public MeldSerializerDetailVendorCloser withEmail(String email) {
        this.email = email;
        return this;
    }
    
    @JsonProperty("excluded_property_groups")
    public Long[] excludedPropertyGroups;

    public MeldSerializerDetailVendorCloser withExcludedPropertyGroups(Long[] excludedPropertyGroups) {
        this.excludedPropertyGroups = excludedPropertyGroups;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fax")
    public String fax;

    public MeldSerializerDetailVendorCloser withFax(String fax) {
        this.fax = fax;
        return this;
    }
    
    @JsonProperty("id")
    public Long id;

    public MeldSerializerDetailVendorCloser withId(Long id) {
        this.id = id;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("is_active")
    public Boolean isActive;

    public MeldSerializerDetailVendorCloser withIsActive(Boolean isActive) {
        this.isActive = isActive;
        return this;
    }
    
    @JsonProperty("managements")
    public Long[] managements;

    public MeldSerializerDetailVendorCloser withManagements(Long[] managements) {
        this.managements = managements;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public MeldSerializerDetailVendorCloser withName(String name) {
        this.name = name;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("phone")
    public String phone;

    public MeldSerializerDetailVendorCloser withPhone(String phone) {
        this.phone = phone;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("update_by")
    public java.util.Map<String, Object> updateBy;

    public MeldSerializerDetailVendorCloser withUpdateBy(java.util.Map<String, Object> updateBy) {
        this.updateBy = updateBy;
        return this;
    }
    
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("updated")
    public OffsetDateTime updated;

    public MeldSerializerDetailVendorCloser withUpdated(OffsetDateTime updated) {
        this.updated = updated;
        return this;
    }
    
    public MeldSerializerDetailVendorCloser(@JsonProperty("address") Long address, @JsonProperty("created") OffsetDateTime created, @JsonProperty("excluded_property_groups") Long[] excludedPropertyGroups, @JsonProperty("id") Long id, @JsonProperty("managements") Long[] managements, @JsonProperty("updated") OffsetDateTime updated) {
        this.address = address;
        this.created = created;
        this.excludedPropertyGroups = excludedPropertyGroups;
        this.id = id;
        this.managements = managements;
        this.updated = updated;
  }
}
