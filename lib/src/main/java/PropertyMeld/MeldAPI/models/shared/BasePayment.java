/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package PropertyMeld.MeldAPI.models.shared;

import PropertyMeld.MeldAPI.utils.DateTimeDeserializer;
import PropertyMeld.MeldAPI.utils.DateTimeSerializer;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;

public class BasePayment {
    @JsonProperty("amount")
    public String amount;

    public BasePayment withAmount(String amount) {
        this.amount = amount;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("amount_refunded")
    public String amountRefunded;

    public BasePayment withAmountRefunded(String amountRefunded) {
        this.amountRefunded = amountRefunded;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("check_no")
    public String checkNo;

    public BasePayment withCheckNo(String checkNo) {
        this.checkNo = checkNo;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("create_by")
    public java.util.Map<String, Object> createBy;

    public BasePayment withCreateBy(java.util.Map<String, Object> createBy) {
        this.createBy = createBy;
        return this;
    }
    
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("created")
    public OffsetDateTime created;

    public BasePayment withCreated(OffsetDateTime created) {
        this.created = created;
        return this;
    }
    
    @JsonProperty("id")
    public Long id;

    public BasePayment withId(Long id) {
        this.id = id;
        return this;
    }
    
    @JsonProperty("method")
    public MethodEnum method;

    public BasePayment withMethod(MethodEnum method) {
        this.method = method;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("notes")
    public String notes;

    public BasePayment withNotes(String notes) {
        this.notes = notes;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("stripe_charge_id")
    public String stripeChargeId;

    public BasePayment withStripeChargeId(String stripeChargeId) {
        this.stripeChargeId = stripeChargeId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("update_by")
    public java.util.Map<String, Object> updateBy;

    public BasePayment withUpdateBy(java.util.Map<String, Object> updateBy) {
        this.updateBy = updateBy;
        return this;
    }
    
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("updated")
    public OffsetDateTime updated;

    public BasePayment withUpdated(OffsetDateTime updated) {
        this.updated = updated;
        return this;
    }
    
    public BasePayment(@JsonProperty("amount") String amount, @JsonProperty("created") OffsetDateTime created, @JsonProperty("id") Long id, @JsonProperty("method") MethodEnum method, @JsonProperty("updated") OffsetDateTime updated) {
        this.amount = amount;
        this.created = created;
        this.id = id;
        this.method = method;
        this.updated = updated;
  }
}
