/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package PropertyMeld.MeldAPI.models.shared;

import PropertyMeld.MeldAPI.utils.DateTimeDeserializer;
import PropertyMeld.MeldAPI.utils.DateTimeSerializer;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;

public class Unit {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("approval_currency_limit")
    public String approvalCurrencyLimit;

    public Unit withApprovalCurrencyLimit(String approvalCurrencyLimit) {
        this.approvalCurrencyLimit = approvalCurrencyLimit;
        return this;
    }
    
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("created")
    public OffsetDateTime created;

    public Unit withCreated(OffsetDateTime created) {
        this.created = created;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("current_residents")
    public Long[] currentResidents;

    public Unit withCurrentResidents(Long[] currentResidents) {
        this.currentResidents = currentResidents;
        return this;
    }
    
    @JsonProperty("id")
    public Long id;

    public Unit withId(Long id) {
        this.id = id;
        return this;
    }
    
    @JsonProperty("is_active")
    public Boolean isActive;

    public Unit withIsActive(Boolean isActive) {
        this.isActive = isActive;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("maintenance_notes")
    public String maintenanceNotes;

    public Unit withMaintenanceNotes(String maintenanceNotes) {
        this.maintenanceNotes = maintenanceNotes;
        return this;
    }
    
    @JsonProperty("property_id")
    public Long propertyId;

    public Unit withPropertyId(Long propertyId) {
        this.propertyId = propertyId;
        return this;
    }
    
    /**
     * This field indicates the particular dwelling within a larger building or complex. For example, in the address 123 Main St, Unit 302, the unit is 302
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("unit")
    public String unit;

    public Unit withUnit(String unit) {
        this.unit = unit;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("unit_address")
    public Address unitAddress;

    public Unit withUnitAddress(Address unitAddress) {
        this.unitAddress = unitAddress;
        return this;
    }
    
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("updated")
    public OffsetDateTime updated;

    public Unit withUpdated(OffsetDateTime updated) {
        this.updated = updated;
        return this;
    }
    
    public Unit(@JsonProperty("created") OffsetDateTime created, @JsonProperty("id") Long id, @JsonProperty("is_active") Boolean isActive, @JsonProperty("property_id") Long propertyId, @JsonProperty("updated") OffsetDateTime updated) {
        this.created = created;
        this.id = id;
        this.isActive = isActive;
        this.propertyId = propertyId;
        this.updated = updated;
  }
}
